   
class Solution {
  public:
   int r [8] = {0,0,-1,1,-1,-1,1,1};
    int c[8]={-1,1,0,0,-1,1,-1,1} ;
    int row ,col ;
    // Function to find the number of islands.
    int numIslands(vector<vector<char>>& grid) {
        // Code here
        int ans = 0 ;
        row = grid.size() ; col = grid[0].size() ;
        for(int i = 0  ; i < grid.size() ; i++) {
            for(int j = 0 ; j < grid[0].size() ; j++) {
                if(grid[i][j] == '1') {
                    ans ++ ; 
                    helper(i,j,grid) ;
                }
            }
        }
        return ans ;
    }
    void helper(int i , int j , vector<vector<char>> & grid) {
               grid[i][j] = '0' ;
              for(int k = 0 ; k < 8 ; k++) {
                  if(isValid(i+r[k] , j + c[k]) && grid[i+r[k]][j+c[k]] =='1') {
                      helper(i+r[k],j+c[k],grid) ;
                  }
              }
    }
    bool isValid(int i , int j) {
        return i >= 0 && i < row && j >= 0 && j < col ;
    }
};
