/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rev(ListNode* head) {
        if (!head || !head->next)
            return head;
        ListNode* newHead = rev(head->next);
        head->next->next = head;
        head->next = NULL;
        return newHead;
    }
    void reorderList(ListNode* head) {
        ListNode *slow, *fast;
        slow = fast = head;
        while (fast && fast->next) {
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode* rl = rev(slow->next);
        slow->next = NULL;
        ListNode *ptr1 = head, *ptr2 = rl, *temp1 = NULL, *temp2 = nullptr;

        while (ptr2) {
            temp1 = ptr1->next;
            temp2 = ptr2->next;
            ptr1->next = ptr2;
            ptr2->next = temp1;
            ptr1 = temp1;
            ptr2 = temp2;
        }
    }
};
