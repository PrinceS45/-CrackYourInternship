/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   vector<string> ans ; 
    vector<string> binaryTreePaths(TreeNode* root) {
         string curr =""; 
         helper(root,curr);
         return ans ;
    }
    void helper(TreeNode* root , string  curr) {
        if(!root) return ; 
        if(!root->left && !root->right) {
            curr+=to_string(root->val);
            ans.push_back(curr) ; 
            return ;
        }
        curr+=to_string(root->val) +"->";
        helper(root->left , curr) ; 
        
        helper(root->right , curr) ; 
    }
};
