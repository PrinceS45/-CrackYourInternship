class Solution {
public:
    int splitArray(vector<int>& nums, int k) {
        int sum = 0 , n = nums.size() ; 
        for(int i =0 ;i < n ; i++) 
            sum += nums[i]  ; 
        
        int start = 0 ,end =sum , ans = -1 ;  
        while(start <=  end) {
            int mid = (start + end) / 2 ; 
            if(isPossible(nums,k,mid)) {
                ans = mid ; 
                end = mid-1  ; 
            }
            else start = mid + 1 ; 
        }
        return ans ; 
    }
    
    bool isPossible(vector<int> & nums , int k  , int mid) {
                int subarray = 1 , sum = 0 , i = 0 ; 
                while(i < nums.size()) {
                    if(nums[i] > mid) return  false ; 
                    if(sum+nums[i] > mid) {
                        subarray++ ; 
                        sum = nums[i] ;
                    }
                    else sum += nums[i] ; 
                    i++ ;
                }
                return subarray <= k  ;
    }
};
