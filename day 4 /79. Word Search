class Solution {
public: // L R U D
    int row[4] = {0, 0, -1, 1};
    int col[4] = {-1, 1, 0, 0};
    bool exist(vector<vector<char>>& board, string word) {
        int r = board.size(), c = board[0].size();

        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (dfs(0, board, word, i, j))
                    return true;
            }
        }
        return false;
    }
    bool dfs(int k, vector<vector<char>>& board, string word, int i, int j) {
        // true coandition
        if (i < 0 || i >= board.size() || j < 0 || j >= board[0].size())
            return false;
        if (board[i][j] != word[k] || board[i][j] == '*')
            return false;
        if (k == word.size() - 1)
            return true;

        char ch = board[i][j];
        board[i][j] = '*';

        for (int x = 0; x < 4; x++) {
            if (dfs(k + 1, board, word, i + row[x], j + col[x]))
                return true;
        }
        board[i][j] = ch;
        return false;
    }
};
