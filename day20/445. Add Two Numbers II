/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
      ListNode* rev(ListNode* head) {
           if(! head || ! head->next) return head ; 
           ListNode* newHead = rev(head->next) ; 
           head->next->next = head  ; 
           head->next = NULL ;
           return newHead ;
      }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ptr1 = rev(l1) , * ptr2 = rev(l2) ; 
        int carry = 0 , sum = 0 ;
        ListNode* dummy = new ListNode(-1) ; 
        ListNode* ans = dummy ; 
        while(ptr1 || ptr2 || carry ) {
                 if(ptr1) {
                    sum+= ptr1->val ;
                      ptr1=ptr1->next ; 
                 }
                 if(ptr2) {
                    sum+=ptr2->val ;
                       ptr2 = ptr2->next ; 

                 }
                 if(carry) {
                    sum+=carry ; 
                 }
              int s = sum % 10 ;
              carry = sum / 10 ; 
              ans->next = new ListNode(s) ; 
              ans = ans->next ;
              sum = 0 ;
            
           
        }
        return rev(dummy->next ) ;
    }
};
