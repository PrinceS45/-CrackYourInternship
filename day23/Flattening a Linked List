/* Node structure  used in the program

struct Node{
    int data;
    struct Node * next;
    struct Node * bottom;

    Node(int x){
        data = x;
        next = NULL;
        bottom = NULL;
    }

};
*/
struct compare {
      bool operator() (Node* a ,Node* b )   {
          return a->data > b->data ;
      }
};
class Solution {
  public:
    // Function which returns the  root of the flattened linked list.
    Node *flatten(Node *root) {
        // Your code here
        priority_queue<Node*, vector<Node* > , compare > pq ;
        while(root) {
            pq.push(root) ; 
            root = root->next ; 
        }
        Node* dummy = new Node(-1) ; 
        Node* ans = dummy ;
        while(! pq.empty()) {
            Node* node = pq.top() ; pq.pop() ; 
            ans->bottom = node ; 
            ans = ans->bottom ; 
            if(node->bottom) pq.push(node->bottom) ;
            
        }
        return dummy->bottom ;
        
    }
};
