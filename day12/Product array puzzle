 vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        //code here
        if(n==1) return {1} ;
        vector<long long> left(n); 
        vector<long long> right(n) ; 
        left[0] = nums[0] ; 
        // make prifix product array 
        for(int i=1 ;i <n ;i ++) {
            left[i] = left[i-1] * nums[i] ; 
        }
        right[n-1] = nums[n-1] ; 
        // make suffix product array 
         for(int i = n-2 ;i>= 0 ; i--) {
            right[i] = nums[i] * right[i+1] ; 
         }

         // final answer = ans[i] = left[i-1] * right[i+1] ; 
         for(int i =0 ; i < n ; i++) {
            if(i==0) nums[i] = right[1] ; 
           else if(i==n-1) nums[i] = left[n-2] ; 
            else nums[i] = left[i-1] * right[i+1] ;
         }
         return nums;
    }
};
