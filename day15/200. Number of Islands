class Solution {
public :
 int r[4] = {0,0,-1,1} ; 
 int c[4] = {-1,1,0,0} ;
 int m , n;
    int numIslands(vector<vector<char>>& grid) {
         m = grid.size() , n = grid[0].size() ;
         int ans= 0 ; 
         queue<pair<int,int>> q ; 
         for(int i =0 ; i < m ; i++) {
            for(int j= 0; j < n ; j++) {
                if(grid[i][j] =='1') {
                    ans++ ;
                    q.push({i,j}) ; 
                    grid[i][j] = '0' ; 
                    while(! q.empty()) {
                       int x = q.front() .first ; 
                       int y = q.front() .second; 

                        q.pop() ; 
                        for(int k =0 ; k < 4 ;k++) {
                            int rn = r[k] + x , cn = c[k] + y ;
                            if(isValid(rn,cn) && grid[rn][cn]=='1') {
                                grid[rn][cn] ='0' ;
                                q.push({rn,cn}) ;
                            }
                        }
                    }
                }
            }
         }
         return ans ;
    }
    bool isValid(int i , int j) {
        return i >= 0 && j>= 0 && i <m && j < n ;
    }
};
