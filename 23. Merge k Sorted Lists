/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
  class compare {
    public :
  bool operator() (ListNode* a , ListNode* b) {
    return a->val > b->val ;
  }
  } ;
    ListNode* mergeKLists(vector<ListNode*>& lists) {
    priority_queue<ListNode *  , vector<ListNode* > , compare > pq;

        for(auto c : lists) {
          if(c)  pq.push(c) ;
        }
    ListNode * head = NULL , * tail = NULL ; 

    while(! pq.empty()) {
        ListNode * node = pq.top() ;
        pq.pop() ;
        if(head==NULL) {
            head = tail = node ;
        }
        else {
            tail->next = node ; 
            tail = tail->next ;
        }
    if(node && node->next) pq.push(node->next) ;

    }
    return head ;


    }
};
