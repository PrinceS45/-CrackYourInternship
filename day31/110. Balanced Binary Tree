/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        return helper(root).first ; 
    }
      pair<bool, int> helper(TreeNode* root ) {
         if(!root) return {true , 0} ; 
          pair<bool,int> left = helper(root->left) ; 
          pair<bool , int> right = helper(root->right) ; 
          int height = max(left.second , right.second) + 1 ; 
     bool status = left.first && right.first && abs(left.second - right.second) <= 1; 
          return {status , height} ; 

      }
};
